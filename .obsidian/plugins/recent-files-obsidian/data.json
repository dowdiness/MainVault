{
  "recentFiles": [
    {
      "basename": "segmentation fault(segfault)",
      "path": "LowLevel/segmentation fault(segfault).md"
    },
    {
      "basename": "CPU",
      "path": "LowLevel/CPU.md"
    },
    {
      "basename": "Unification",
      "path": "Theory/Algorithm/Unification.md"
    },
    {
      "basename": "Logical Relations",
      "path": "Theory/Logic/Proof/Logical Relations.md"
    },
    {
      "basename": "Realizability",
      "path": "Theory/Logic/Proof/Realizability.md"
    },
    {
      "basename": "index",
      "path": "Theory/Logic/Proof/index.md"
    },
    {
      "basename": "Proofs and Types",
      "path": "Theory/Logic/Girard/Proofs and Types.md"
    },
    {
      "basename": "index",
      "path": "Theory/Logic/Girard/index.md"
    },
    {
      "basename": "Blind spot",
      "path": "Theory/Logic/Girard/Blind spot.md"
    },
    {
      "basename": "Sequent calculus",
      "path": "Theory/Logic/Sequent calculus.md"
    },
    {
      "basename": "Syntax",
      "path": "Theory/Logic/Syntax.md"
    },
    {
      "basename": "Graph Theory",
      "path": "Theory/Math/Graph theory/Graph Theory.md"
    },
    {
      "basename": "index",
      "path": "Theory/Math/Notes on Lattice Theory/index.md"
    },
    {
      "basename": "Domain Theory",
      "path": "Theory/Math/Domain Theory.md"
    },
    {
      "basename": "Math 教科書",
      "path": "Theory/Math/Math 教科書.md"
    },
    {
      "basename": "Papers",
      "path": "Theory/Math/Papers.md"
    },
    {
      "basename": "束論",
      "path": "Theory/Math/束論.md"
    },
    {
      "basename": "順序集合",
      "path": "Theory/Math/順序集合.md"
    },
    {
      "basename": "Conversion Rule",
      "path": "Theory/Type Theory/Conversion rule/Conversion Rule.md"
    },
    {
      "basename": "Type Theory",
      "path": "Theory/Type Theory/Type Theory.md"
    },
    {
      "basename": "Session Type",
      "path": "Theory/Type Theory/Session Type.md"
    },
    {
      "basename": "継承と部分型（サブタイピング）の違いについて",
      "path": "Theory/型システム/継承と部分型（サブタイピング）の違いについて.md"
    },
    {
      "basename": "部分型関係及び、部分型多相のまとめ",
      "path": "Theory/型システム/部分型関係及び、部分型多相のまとめ.md"
    },
    {
      "basename": "リスコフの置換原理",
      "path": "Theory/型システム/リスコフの置換原理.md"
    },
    {
      "basename": "index",
      "path": "Theory/型システム/index.md"
    },
    {
      "basename": "Bidirectional type",
      "path": "Theory/型システム/Bidirectional type.md"
    },
    {
      "basename": "「型システム入門」入門以前",
      "path": "Theory/型システム/「型システム入門」入門以前.md"
    },
    {
      "basename": "Computer Science And Recursion Theory",
      "path": "Theory/Computer Science And Recursion Theory.md"
    },
    {
      "basename": "Curry–Howard correspondence",
      "path": "Theory/Curry–Howard correspondence.md"
    },
    {
      "basename": "README",
      "path": "README.md"
    },
    {
      "basename": "index",
      "path": "index.md"
    },
    {
      "basename": "Essentials of compilation",
      "path": "Compiler/Books/Essentials of compilation/Essentials of compilation.md"
    },
    {
      "basename": "Preliminaries",
      "path": "Compiler/Books/Essentials of compilation/Preliminaries.md"
    },
    {
      "basename": "Garbage Collection",
      "path": "Compiler/Books/Crafting Interpreters/Garbage Collection.md"
    },
    {
      "basename": "Modern compiler implementation in ML",
      "path": "Compiler/Books/Modern compiler implementation in ML.md"
    },
    {
      "basename": "Writing an interpreter in Go",
      "path": "Compiler/Books/Writing an interpreter in Go.md"
    },
    {
      "basename": "Closures",
      "path": "Compiler/Books/Crafting Interpreters/Closures.md"
    },
    {
      "basename": "Crafting Interpreters",
      "path": "Compiler/Books/Crafting Interpreters/Crafting Interpreters.md"
    },
    {
      "basename": "LR 構文解析の原理",
      "path": "Compiler/Frontend/Parser/LR 構文解析の原理.md"
    },
    {
      "basename": "Top Down Operator Precedence",
      "path": "Compiler/Frontend/Parser/Top Down Operator Precedence.md"
    },
    {
      "basename": "Computation expression",
      "path": "Compiler/LangSpecific/FSharp/Computation expression.md"
    },
    {
      "basename": "Papers",
      "path": "Compiler/LangSpecific/Go/Papers.md"
    },
    {
      "basename": "Compiler",
      "path": "Compiler/LangSpecific/Haskell/Compiler.md"
    },
    {
      "basename": "index",
      "path": "Compiler/LangSpecific/TypeScript/index.md"
    },
    {
      "basename": "資料",
      "path": "Compiler/LangSpecific/WASM/資料.md"
    },
    {
      "basename": "Elixir",
      "path": "Compiler/LangSpecific/Elixir.md"
    },
    {
      "basename": "α-conversion",
      "path": "Compiler/Middleend/α-conversion.md"
    },
    {
      "basename": "Compiler optimization",
      "path": "Compiler/Middleend/Compiler optimization.md"
    },
    {
      "basename": "Common subexpression elimination",
      "path": "Compiler/Middleend/Common subexpression elimination.md"
    },
    {
      "basename": "Three-address code",
      "path": "Compiler/Middleend/Intermediate representation/Three-address code.md"
    }
  ],
  "omittedPaths": [],
  "omittedTags": [],
  "updateOn": "file-open",
  "omitBookmarks": false
}